#!/bin/bash

set -o errexit
set -o xtrace

test_dir=$(realpath $(dirname $0))
. ${test_dir}/../functions

check_cr_config() {
    local cluster="$1"

    # apply cr config
    kubectl apply \
        -f $test_dir/conf/$cluster.yml

    # check if at least 1 Pod started
    wait_for_running $cluster-node 1

    # check if statefulset created with expected config
    compare_kubectl statefulset/$cluster-node
    compare_kubectl statefulset/$cluster-proxysql

    # change resources
    cat $test_dir/conf/$cluster.yml \
        | sed -e 's/300m/600m/' \
        | sed -e 's/500M/1G/' \
        | sed -e 's/0.5G/1G/' \
        | kubectl apply -f-
    sleep 2

    # check if statefulset was updated with expected config
    compare_kubectl statefulset/$cluster-node "-increased"
    compare_kubectl statefulset/$cluster-proxysql "-increased"

    # delete cluster
    kubectl delete \
        -f $test_dir/conf/$cluster.yml
}

no_storage() {
    local cluster="no-storage-pxc"

    # apply cr config
    kubectl apply \
        -f $test_dir/conf/$cluster.yml

    kubectl logs $(get_operator_pod) \
        | grep "volume.Size can't be empty"

    # delete cluster
    kubectl delete \
        -f $test_dir/conf/$cluster.yml
}

main() {
    create_namespace $namespace
    deploy_operator
    kubectl apply -f $conf_dir/secrets.yml

    desc 'check if possible to create cluster without CPU/Memory limits'
    check_cr_config "no-limits-pxc"

    desc 'check if possible to create cluster without CPU/Memory requests'
    check_cr_config "no-requests-pxc"

    desc 'check if possible to create cluster without CPU/Memory requests and limits'
    check_cr_config "no-requests-no-limits-pxc"

    desc 'check if possible to create cluster without storage size'
    no_storage

    destroy $namespace
}

main
